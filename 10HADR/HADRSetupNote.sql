
-- Install Failover Cluster

-- Install SQL
/*
service account
Logansql\sql_service
SQL_Latin1_General_CP1_CI_AS
Logandata: D:\Databases\
Loganlog: E:\Databases\
Loganbackup G:\Backup
*/

-- Install SSMS


-- Enable HADR

FNPSQLCluster
167.10.20.50 (Site A)
170.10.20.50 (Site B)

Listener
167.10.20.51 (Site A)
170.10.20.50 (Site B)

host1A.logansql.net
167.10.20.70

host2A.logansql.net
167.10.20.80

host1B.logansql.net
170.10.20.70


--- YOU MUST EXECUTE THE FOLLOWING SCRIPT IN SQLCMD MODE.
:Connect host1A

use [master]


GO

USE [master]

GO

CREATE ENDPOINT [Hadr_endpoint] 
	AS TCP (LISTENER_PORT = 5022)
	FOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES)

GO

IF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0
BEGIN
	ALTER ENDPOINT [Hadr_endpoint] STATE = STARTED
END


GO

use [master]

GO

GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [Logansql\sql_service]

GO

:Connect Host1A

IF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);
END
IF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;
END

GO

:Connect Host2A

USE [master]

GO

CREATE ENDPOINT [Hadr_endpoint] 
	AS TCP (LISTENER_PORT = 5022)
	FOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES)

GO

IF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0
BEGIN
	ALTER ENDPOINT [Hadr_endpoint] STATE = STARTED
END


GO

use [master]

GO

GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [Logansql\sql_service]

GO

:Connect Host2A

IF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);
END
IF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;
END

GO

:Connect Host1B

USE [master]

GO

CREATE ENDPOINT [Hadr_endpoint] 
	AS TCP (LISTENER_PORT = 5022)
	FOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES)

GO

IF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0
BEGIN
	ALTER ENDPOINT [Hadr_endpoint] STATE = STARTED
END


GO

use [master]

GO

GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [Logansql\sql_service]

GO

:Connect Host1B

IF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);
END
IF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')
BEGIN
  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;
END

GO

:Connect Host1A

USE [master]

GO

CREATE AVAILABILITY GROUP [DBA]
WITH (AUTOMATED_BACKUP_PREFERENCE = PRIMARY,
DB_FAILOVER = OFF,
DTC_SUPPORT = NONE)
FOR DATABASE [DBA]
REPLICA ON N'Host1A' WITH (ENDPOINT_URL = N'TCP://Host1A.logansql.net', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = NO)),
	N'Host2A' WITH (ENDPOINT_URL = N'TCP://Host2A.logansql.net', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = NO)),
	N'Host1B' WITH (ENDPOINT_URL = N'TCP://Host1B.logansql.net', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = NO));

GO

:Connect Host2A

ALTER AVAILABILITY GROUP [DBA] JOIN;

GO

ALTER AVAILABILITY GROUP [DBA] GRANT CREATE ANY DATABASE;

GO

:Connect Host1B

ALTER AVAILABILITY GROUP [DBA] JOIN;

GO

ALTER AVAILABILITY GROUP [DBA] GRANT CREATE ANY DATABASE;

GO


GO


/*
167.10.20.51 (Site A)
170.10.20.50 (Site B)
*/

USE [master]
GO
ALTER AVAILABILITY GROUP [DBA]
ADD LISTENER N'LoganSQLLNR' (
WITH IP
((N'167.10.20.51', N'255.255.255.0'),
(N'170.10.20.50', N'255.255.255.0')
)
, PORT=6022);
GO

USE [master]
GO
ALTER AVAILABILITY GROUP [DBA]
MODIFY LISTENER N'LoganSQLLNR' (PORT=1433);
GO

sqlcmd -SLoganSQLLNR –E

USE [master]
GO
ALTER AVAILABILITY GROUP [DBA]
MODIFY REPLICA ON N'Host1A' WITH (AVAILABILITY_MODE = SYNCHRONOUS_COMMIT)
GO
ALTER AVAILABILITY GROUP [DBA]
MODIFY REPLICA ON N'Host1A' WITH (FAILOVER_MODE = AUTOMATIC)
GO

USE [master]
GO
ALTER AVAILABILITY GROUP [DBA]
MODIFY REPLICA ON N'Host2A' WITH (AVAILABILITY_MODE = SYNCHRONOUS_COMMIT)
GO
ALTER AVAILABILITY GROUP [DBA]
MODIFY REPLICA ON N'Host2A' WITH (FAILOVER_MODE = AUTOMATIC)
GO


--- YOU MUST EXECUTE THE FOLLOWING SCRIPT IN SQLCMD MODE.
:Connect Host1A

:Connect Host2A

ALTER AVAILABILITY GROUP [DBA] FAILOVER;

GO


GO
sqlcmd -SLoganSQLLNR –E

USE [master]
GO
ALTER AVAILABILITY GROUP [DBA]
MODIFY REPLICA ON N'Host1B' WITH (AVAILABILITY_MODE = SYNCHRONOUS_COMMIT)
GO
ALTER AVAILABILITY GROUP [DBA]
MODIFY REPLICA ON N'Host1B' WITH (FAILOVER_MODE = AUTOMATIC)
GO

:Connect Host1A

:Connect Host1B

ALTER AVAILABILITY GROUP [DBA] FAILOVER;

GO

/*
ping LoganSQLLNR
sqlcmd -SLoganSQLLNR -E
sqlcmd -S 167.10.20.51,1433 -E
*/
